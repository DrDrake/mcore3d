<?xml version="1.0"?>
<!-- A sample effect definiation xml -->

<root>

<merge mode="blend" />

<pass enable="false" />

<pass
	enable="true"
	drawLine="false"
>
	<standard
		ambient="0.2, 0.2, 0.2, 1.0"
		diffuse="0.8, 0.6, 0.5, 1.0"
		specular="0.5, 0.5, 0.5, 1.0"
		shininess="30.0"
	/>

	<!-- The first occuring texture will use texture unit 0 -->
	<texture
		file="../normal128x128.png"
		shaderName="diffuseMap"
	/>

	<shader>
		<!-- Reference external file as vertex shader -->
		<vertex file="./perPixel.glvs" />

		<!-- Define the fragment shader just inside the xml -->
		<fragment>
			<parameter name="exposure" type="float" label="Exposure level">4</parameter>
			<![CDATA[
			varying vec3 vertex, normal, lightDir;
			uniform sampler2D diffuseMap;
			uniform float exposure;

			void main()
			{
				vec4 ambient = gl_FrontLightProduct[0].ambient;
				vec4 diffuse = gl_FrontLightProduct[0].diffuse;
				vec4 specular = gl_FrontLightProduct[0].specular;
				vec3 n = normalize(normal);

				diffuse *= max(dot(n, lightDir), 0.0);
				vec3 refl = -reflect(lightDir, normal);
				specular *= pow(max(dot(refl, normalize(-vertex)), 0.0), gl_FrontMaterial.shininess);

				gl_FragColor = specular + (ambient + diffuse) * texture2D(diffuseMap, gl_TexCoord[0].xy);
				gl_FragColor.rgb *= exposure;
				gl_FragColor.a = clamp(gl_FragColor.a, 0.0, 1.0);
			}
			]]>
		</fragment>
	</shader>
</pass>

<pass
	enable="true"
	drawLine="true"
	lineWidth="5"
	cullMode="front"
>
	<standard
		ambient="1.0, 0.0, 0.0, 1.0"
		diffuse="0.0, 0.0, 0.0, 1.0"
		specular="0.0, 0.0, 0.0, 1.0"
	/>
	<blending
		colorBlend="true"
		srcFactor="one"
		dstFactor="one"
	/>
	<depthStencil
		depthTest="true"
		depthWrite="false"
		depthFunc="lessEqual"
	/>
</pass>

</root>