varying vec3 normal, lightDir, halfVector;
varying vec2 colorCoord;
varying vec4 shadowCoord;

uniform mat4 texMatrix;

void main(void)
{
	gl_Position = ftransform();

	// Transform the normal into eye space.
	normal = gl_NormalMatrix * gl_Normal;

	// Now normalize the light's direction. Note that according to the OpenGL specification,
	// the light is stored in eye space. Also since we're talking about a directional light,
	// the position field is actually direction.
	lightDir = normalize(gl_LightSource[0].position.xyz);

	// Normalize the halfVector to pass it to the fragment shader.
	halfVector = normalize(gl_LightSource[0].halfVector.xyz);

	colorCoord = gl_MultiTexCoord0.xy;

	// gl_TextureMatrix[1] should contains the inverse of the view matrix,
	// resulting a model matrix when combining with gl_ModelViewMatrix
	shadowCoord = gl_TextureMatrix[1] * gl_ModelViewMatrix * gl_Vertex;
}
